name: Compilation & tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  nano_build:
    name: Build application for NanoS, X and S+
    strategy:
      matrix:
        include:
          - SDK: "$NANOS_SDK"
            name: nanos
          - SDK: "$NANOX_SDK"
            name: nanox
          - SDK: "$NANOSP_SDK"
            name: nanosp
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Build
        run: |
          make clean
          make BOLOS_SDK=${{ matrix.SDK }}
          mv bin/app.elf bin/velas_${{ matrix.name }}.elf
      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: apps
          path: bin/*.elf

  jobs-unit-tests:
    name: Unit Tests
    needs: [nano_build]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unit Test
        run : |
          make -C libsol

  jobs-tests:
    name: Tests
    needs: [jobs-unit-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run : |
          sudo apt update
          sudo apt install -y libudev-dev libusb-1.0-0-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o /tmp/rustup-init.sh
          sh /tmp/rustup-init.sh -y --component clippy --component rustfmt
          export PATH="${HOME}/.cargo/bin:${PATH}"
          cd ./tests
          cargo clippy --all -- --deny=warnings
          cargo fmt --all -- --check

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder:latest
    steps:
      - uses: actions/checkout@v2
      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  # jobs-e2e-tests:
  #   needs: [job_build_debug_nano_s, job_build_debug_nano_x]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Test
  #       run: |
  #         id
  #         echo $HOME
  #         echo $DISPLAY
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
  #     - name: Install node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: "16.4.0"
  #     - name: Install yarn
  #       run: |
  #         npm install -g yarn
  #     - name: Build/Install build js deps
  #       run: |
  #         cd tests && yarn install
  #     - name: Run zemu tests
  #       run: |
  #         cd tests && yarn test
